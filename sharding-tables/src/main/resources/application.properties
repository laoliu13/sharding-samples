spring.application.name=sharding-tables
server.port=8081

# ??????????????
spring.main.allow-bean-definition-overriding=true

#????????????user0,user1...?????????
spring.shardingsphere.datasource.names=u0
# ???
#???????????user01???????u0.type,u0.driver-class-name,u0.url,u0.username,u0.password
spring.shardingsphere.datasource.u0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.u0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.u0.url=jdbc:mysql://localhost:3306/sharding_tables?characterEncoding=utf-8
spring.shardingsphere.datasource.u0.username=root
spring.shardingsphere.datasource.u0.password=Lzj19931030.1

# ???????????  ????? CustomTableShardingAlgorithm -> Collection<String> availableTargetNames
spring.shardingsphere.sharding.tables.user.actual-data-nodes=u0.user_${0..3}

# ???????
#spring.shardingsphere.sharding.tables.user.table-strategy.standard.sharding-column=id
#spring.shardingsphere.sharding.tables.user.table-strategy.standard.precise-algorithm-class-name=com.zcs.shardingjdbc.config.MyPreciseShardingAlgorithm

# inline???   ?????? ?? id????  id???????
spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=id
inline???
spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_${id.longValue() % 4}

# ??sql????
spring.shardingsphere.props.sql.show=true

# \u5E94\u7528\u540D\u79F0
spring.application.name=sharding-tables
# \u5E94\u7528\u7AEF\u53E3
server.port=8081

# \u5141\u8BB8\u8986\u76D6\u540C\u540D\u79F0\u7684bean
spring.main.allow-bean-definition-overriding=true

# \u5B9A\u4E49\u6570\u636E\u6E90\u540D\u79F0
spring.shardingsphere.datasource.names=u0
# \u5206\u8868\u914D\u7F6E
# \u6570\u636E\u5E93\u8FDE\u63A5\u4FE1\u606F
spring.shardingsphere.datasource.u0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.u0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.u0.url=jdbc:mysql://localhost:3306/sharding_tables?characterEncoding=utf-8
spring.shardingsphere.datasource.u0.username=root
spring.shardingsphere.datasource.u0.password=Lzj19931030.1

# \u5206\u8868\u4FE1\u606F
spring.shardingsphere.sharding.tables.user.actual-data-nodes=u0.user_${0..3}

# \u5206\u8868\u5065
#spring.shardingsphere.sharding.tables.user.table-strategy.standard.sharding-column=id
# \u5206\u8868\u65B9\u6CD5 \u4E5F\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528@Configuration \u6CE8\u89E3\u4EE3\u66FF
#spring.shardingsphere.sharding.tables.user.table-strategy.standard.precise-algorithm-class-name=com.zcs.shardingjdbc.config.MyPreciseShardingAlgorithm

# inline \u8868\u8FBE\u5F0F
spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=id
# \u5206\u8868\u89C4\u5219 \u6839\u636E id % 4 \u7684\u503C \u843D\u5E93
spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_${id.longValue() % 4}

# \u662F\u5426\u663E\u793Asql
spring.shardingsphere.props.sql.show=true
